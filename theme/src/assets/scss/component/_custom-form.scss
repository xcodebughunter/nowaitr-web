// Styling for custom switch input
.cf-switch {
  input {
    position: absolute;
    left: -1000000px;
    &:disabled ~ label {
      background-color: rgba($gray-500, .4);
      pointer-events: none;
      &:after {
        background-color: $gray-500;
      }
    }
    &:checked ~ label:after {
      left: 14px;
    }
  }
  label {
    display: block;
    position: relative;
    height: 12px;
    width: 28px;
    background-color: $gray-400;
    border-radius: 8px;
    cursor: pointer;
    transition: all .5s;
    &:after {
      @extend %attr-content;
      left: -2px;
      top: -2px;
      width: 16px;
      height: 16px;
      border-radius: 50%;
      cursor: pointer;
      transition: all .5s;
      background-color: $white;
      box-shadow: 0 3px 1px -2px rgba($black, 0.14), 0 2px 2px 0 rgba($black, 0.098), 0 1px 5px 0 rgba($black, 0.084);
    }
    &:active:after {
      transform: scale(1.15, .85)
    }
  }
}

.cf-checkbox, .cf-radio {
  position: relative;
  text-align: left;
  display: flex;
  input {
    visibility: hidden;
    opacity: 0;
  }
  label {
    cursor: pointer;
    display: inline-block;
    padding-left: $input-btn-left-padding;
    &:after, &:before {
      @extend %attr-content;
    }
    &:before {
      width: $input-btn-width;
      height: $input-btn-height;
      border: 1px solid theme-color(secondary);
      background-color: $white;
    }
  }
}

// Styling for custom checkbox
.cf-checkbox {
  input[type="checkbox"] {
    &:checked + label:before {
      border-color: $blue;
      background-color: $blue;
    }
  }
  label {
    &:after, &:before {
      @extend %attr-content;
      top: 1px;
      left: 0;
    }
    &:before {
      border-radius: 2px;
      transition: background .3s;
    }
    &:after {
      width: $input-btn-width / 1.5;
      height: $input-btn-height / 2.5;
      border: 2px solid #fff;
      border-top-style: none;
      border-right-style: none;
      transform: translate(3px, 4px) rotate(-45deg);
    }
  }
  @each $tuple in $colors-config {
    &.cf-#{nth($tuple, 1)} {
      input[type="checkbox"]:checked + label:before {
        border-color: nth($tuple, 2);
        background-color: nth($tuple, 2);
      }
    }
  }
}

// Styling for custom radio
.cf-radio {
  label {
    &:before, &:after {
      border-radius: 50%;
    }
    &:before {
      left: 0;
    }
    &:after {
      width: $input-btn-width / 2;
      height: $input-btn-height / 2;
      left: $input-btn-width / 4;
      top: $input-btn-height / 4;
      transform: scale(0);
      transition: all .3s;
    }
  }
  input[type="radio"]:checked + label:after {
    transform: scale(1);
  }
  @each $tuple in $colors-config {
    &.cf-#{nth($tuple, 1)} {
      input[type="radio"]:checked + label {
        &:before {
          border-color: nth($tuple, 2);
        }
        &:after {
          background-color: nth($tuple, 2);
        }
      }
    }
  }
}

// Styling for custom select
.cf-select {
  border: none;
  background-image: url("../img/arrow.png");
  background-position: right 0 center;
  background-repeat: no-repeat;
  color: theme-color(secondary);
  padding-right: 16px;
  padding-left: 16px;
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  &.form-control {
    border: 1px solid $gray-400;
    background-position: right 16px center;
  }
}

.custom-select {
  background: url("../img/arrow.png") right 16px center no-repeat;
}

// Styling for upload paper clip
.upload-paper-clip {
  position: relative;
  width: 16px;
  height: 16px;
  * {
    @include absolute(top 0 left 0);
    width: 100%;
    height: 100%;
  }
  input[type="file"] {
    opacity: 0;
    z-index: 2;
    cursor: pointer;
  }
  button {
    border: none;
    background-color: transparent;
    color: $gray-500;
    z-index: 1;
  }
}